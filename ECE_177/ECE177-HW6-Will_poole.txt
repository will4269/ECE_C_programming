7-1

#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_ADC1_Init();
  MX_LPUART1_UART_Init();
  /* USER CODE BEGIN 2 */
  int count=0,i,step=0;
  float a[100],sum=0.0,count_p=0.0,sum_p=0.0,sum_n=0.0;
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while(1){
    /* USER CODE END WHILE */

        printf("\n\rEnter the count for array: ");
        setvbuf(stdin ,NULL,_IONBF ,0);
        scanf("%d", &count);
        printf("%d entered\n\r", count);
        const int keep=count;
        srand(time(NULL));
        for(i=1;i<=count;++i){
            a[i]=rand()%100-50;//generates numbers randomly from -50 to 50 and stores them in an array
            sum+=a[i]; //stores sum
            if(array_hundred[i]>=0){ //checks if array index i is positive
                count_p++;  //adds one to positive count
                sum_p+=a[i]; //adds array index to sum_p
            }
            else{
                sum_n+=a[i]; //adds to negative array sum
            }
            step+=1;
            if(step%10==0){
                printf("%f \n\r", a[i]); // prints on the tenth number of the array to generate new line
            }
            else{
                printf("%f, ",a[i]); //prints every other number to make line of ten
            }
        }
        printf("%d is the count, %f is the sum, %f is the positive average, %f is the positive count, %f is negative sum, %f is negative avg\n\r", keep,sum,(sum_p/count_p),count_p,sum_n,(sum_n/(keep-count_p)));
        break;
  }
}

7-8


#include "main.h"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_ADC1_Init();
  MX_LPUART1_UART_Init();
  /* USER CODE BEGIN 2 */
  /* USER CODE END 2 */
  int d,c,b,i,amt[100],count,times=0,index=0,a[100];
  srand(time(NULL));
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while(1){
	  for(d=0;d<100;d++){
		  a[d]=rand()%100-50;//generates numbers randomly from -50 to 50
	  }
	  for(i=0;i<100;++i){
		  count=0;
		  times=0;
		  for(b=1;b<100;b++){
			  if(a[i]==a[b]){
				  count++;
			  }
	          amt[i]=count;
		  }
		  for(c=0;c<100;++c){
			  if(amt[c]>times){
				  times=amt[c];
				  index=c;
			  }
		  }
	    }
	  printf("%f is the mode, it occurs %d times.\n\r",a[index],times);
	  break;
  }
}

To use in online compiler:
7-1

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void)
{
  int count=0,i,step=0;
  float a[100],sum=0.0,count_p=0.0,sum_p=0.0,sum_n=0.0;
  while(1){

        printf("\n\rEnter the count for array: ");
        setvbuf(stdin ,NULL,_IONBF ,0);
        scanf("%d", &count);
        printf("%d entered\n\r", count);
        const int keep=count;
        srand(time(NULL));
        for(i=1;i<=count;++i){
            a[i]=rand()%100-50;//generates numbers randomly from -50 to 50 and stores them in an array
            sum+=a[i]; //stores sum
            if(a[i]>=0){ //checks if array index i is positive
                count_p++;  //adds one to positive count
                sum_p+=a[i]; //adds array index to sum_p
            }
            else{
                sum_n+=a[i]; //adds to negative array sum
            }
            step+=1;
            if(step%10==0){
                printf("%f \n\r", a[i]); // prints on the tenth number of the array to generate new line
            }
            else{
                printf("%f, ",a[i]); //prints every other number to make line of ten
            }
        }
        printf("%d is the count, %f is the sum, %f is the positive average, %f is the positive count, %f is negative sum, %f is negative avg\n\r", keep,sum,(sum_p/count_p),count_p,sum_n,(sum_n/(keep-count_p)));
        break;
  }
}

7-8

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void)
{
  int d,c,b,i,amt[100],count,times=0,index=0,a[100];
  srand(time(NULL));
  while(1){
	  for(d=0;d<100;d++){
		  a[d]=rand()%100-50;//generates numbers randomly from -50 to 50
		  printf("%d\n\r",a[d]);
	  }
	  for(i=0;i<100;++i){
		  count=0;
		  times=0;
		  for(b=1;b<100;b++){
			  if(a[i]==a[b]){
				  count++;
			  }
	          amt[i]=count;
		  }
		  for(c=0;c<100;++c){
			  if(amt[c]>times){
				  times=amt[c];
				  index=c;
			  }
		  }
	    }
	  printf("%d is the mode, it occurs %d times.\n\r",a[index],times);
	  break;
  }
}